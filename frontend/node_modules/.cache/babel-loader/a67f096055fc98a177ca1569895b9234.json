{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\m\\\\m\\\\frontend\\\\src\\\\screens\\\\ForgotPasswordScreen.js\",\n    _s = $RefreshSig$();\n\nimport Axios from 'axios';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Helmet } from 'react-helmet-async';\nimport { useContext, useEffect, useState } from 'react';\nimport { Store } from '../Store';\nimport { toast } from 'react-toastify';\nimport { getError } from '../utils';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'USER_FORGOT_PASSWORD_REQUEST':\n      return {\n        loading: true\n      };\n\n    case 'USER_FORGOT_PASSWORD_SUCCESS':\n      return {\n        loading: false,\n        message: action.payload.message\n      };\n\n    case 'USER_FORGOT_PASSWORD_FAIL':\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case 'USER_RESET_PASSWORD_REQUEST':\n      return {\n        loading: true\n      };\n\n    case 'USER_RESET_PASSWORD_SUCCESS':\n      return {\n        loading: false,\n        message: action.payload.message\n      };\n\n    case 'USER_RESET_PASSWORD_FAIL':\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default function ForgotPasswordScreen() {\n  _s();\n\n  const [{\n    loading,\n    message,\n    error\n  }, dispatch] = useReducer(reducer, {\n    loading: true,\n    error: ''\n  });\n  const navigate = useNavigate();\n  const {\n    search\n  } = useLocation();\n  const redirectInUrl = new URLSearchParams(search).get('redirect');\n  const redirect = redirectInUrl ? redirectInUrl : '/';\n  const [email, setEmail] = useState('');\n  const {\n    state,\n    dispatch: ctxDispatch\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n\n  const submitHandler = async e => {\n    e.preventDefault();\n\n    try {\n      const {\n        data\n      } = await Axios.post('/api/users/forgotpassword', {\n        email\n      });\n      ctxDispatch({\n        type: 'USER_SIGNIN',\n        payload: data\n      });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n      navigate(redirect || '/');\n    } catch (err) {\n      toast.error(getError(err));\n    }\n  };\n\n  useEffect(() => {\n    if (userInfo) {\n      navigate(redirect);\n    }\n  }, [navigate, redirect, userInfo]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"small-container\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Assistance du mot de passe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"my-3\",\n      children: \"Assistance du mot de passe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Saisissez l'adresse e-mail associ\\xE9e \\xE0 votre compte.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(MessageBox, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this), message && /*#__PURE__*/_jsxDEV(MessageBox, {\n      variant: \"success\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }, this), loading && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          required: true,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Continuer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ForgotPasswordScreen, \"CXqzFEBG/Aws1audtWTcK8V36Ic=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = ForgotPasswordScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPasswordScreen\");","map":{"version":3,"sources":["C:/Users/user/Desktop/m/m/frontend/src/screens/ForgotPasswordScreen.js"],"names":["Axios","useLocation","useNavigate","Container","Form","Button","Helmet","useContext","useEffect","useState","Store","toast","getError","LoadingBox","MessageBox","useSelector","reducer","state","action","type","loading","message","payload","error","ForgotPasswordScreen","dispatch","useReducer","navigate","search","redirectInUrl","URLSearchParams","get","redirect","email","setEmail","ctxDispatch","userInfo","submitHandler","e","preventDefault","data","post","localStorage","setItem","JSON","stringify","err","target","value"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Helmet } from 'react-helmet-async';\nimport { useContext, useEffect, useState } from 'react';\nimport { Store } from '../Store';\nimport { toast } from 'react-toastify';\nimport { getError } from '../utils';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { useSelector } from 'react-redux'\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'USER_FORGOT_PASSWORD_REQUEST':\n      return { loading: true };\n  \n    case 'USER_FORGOT_PASSWORD_SUCCESS':\n      return { loading: false, message: action.payload.message };\n        \n    case 'USER_FORGOT_PASSWORD_FAIL':\n      return { loading: false, error: action.payload };\n        \n    case 'USER_RESET_PASSWORD_REQUEST':\n      return { loading: true };\n  \n    case 'USER_RESET_PASSWORD_SUCCESS':\n      return { loading: false, message: action.payload.message };\n  \n    case 'USER_RESET_PASSWORD_FAIL':\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default function ForgotPasswordScreen() {\n\n  const [{ loading, message ,error}, dispatch] =\n  useReducer(reducer, {\n    loading: true,\n    error: '',\n  });\n\n  const navigate = useNavigate();\n  const { search } = useLocation();\n  const redirectInUrl = new URLSearchParams(search).get('redirect');\n  const redirect = redirectInUrl ? redirectInUrl : '/';\n\n  const [email, setEmail] = useState('');\n\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    try {\n      const { data } = await Axios.post('/api/users/forgotpassword', {\n        email,\n      });\n      ctxDispatch({ type: 'USER_SIGNIN', payload: data });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n      navigate(redirect || '/');\n    } catch (err) {\n      toast.error(getError(err));\n    }\n  };\n\n  useEffect(() => {\n    if (userInfo) {\n      navigate(redirect);\n    }\n  }, [navigate, redirect, userInfo]);\n\n  return (\n    <Container className=\"small-container\">\n      <Helmet>\n        <title>Assistance du mot de passe</title>\n      </Helmet>\n      <h1 className=\"my-3\">Assistance du mot de passe</h1>\n      <p>Saisissez l'adresse e-mail associée à votre compte.</p>\n      {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\n      {message && <MessageBox variant=\"success\">{message}</MessageBox>}\n      {loading && <LoadingBox />}\n\n      <Form onSubmit={submitHandler}>\n        <Form.Group className=\"mb-3\" controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            required\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Group>\n        <div className=\"mb-3\">\n          <Button type=\"submit\">Continuer</Button>\n        </div>     \n      </Form>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
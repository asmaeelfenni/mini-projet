{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\m\\\\m\\\\frontend\\\\src\\\\screens\\\\ResetPasswordScreen.js\",\n    _s = $RefreshSig$();\n\nimport Axios from 'axios';\nimport { Link, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { Row, Col } from 'react-bootstrap';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Helmet } from 'react-helmet-async';\nimport { React, useContext, useEffect, useState, useReducer } from 'react';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'USER_RESET_PASSWORD_REQUEST':\n      return {\n        loading: true\n      };\n\n    case 'USER_RESET_PASSWORD_SUCCESS':\n      return {\n        loading: false,\n        message: action.payload.message\n      };\n\n    case 'USER_RESET_PASSWORD_FAIL':\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default function ResetPasswordScreen() {\n  _s();\n\n  const [{\n    loading,\n    message,\n    error\n  }, dispatch] = useReducer(reducer, {\n    loading: false,\n    error: ''\n  });\n  const navigate = useNavigate();\n  const {\n    search\n  } = useLocation();\n  const redirectInUrl = new URLSearchParams(search).get('redirect');\n  const redirect = redirectInUrl ? redirectInUrl : '/';\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [passwordErrorMessage, setPasswordErrorMessage] = useState(null);\n  const {\n    state\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n\n  const submitHandler = async e => {\n    e.preventDefault();\n    const {\n      tokenn\n    } = useParams;\n    const token = tokenn;\n    dispatch({\n      type: 'USER_RESET_PASSWORD_REQUEST'\n    });\n\n    try {\n      if (password !== confirmPassword) {\n        setPasswordErrorMessage('Les mots de passe ne sont pas indentiques');\n        dispatch({\n          type: 'USER_RESET_PASSWORD_FAIL',\n          payload: getError(error)\n        });\n      } else {\n        setPasswordErrorMessage(null);\n        const {\n          data\n        } = await Axios.patch(`/api/users/resetpassword/${token}`, {\n          password\n        });\n        dispatch({\n          type: 'USER_RESET_PASSWORD_SUCCESS',\n          payload: data\n        });\n      }\n    } catch (err) {\n      dispatch({\n        type: 'USER_RESET_PASSWORD_FAIL',\n        payload: getError(err)\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (userInfo) {\n      navigate(redirect);\n    }\n  }, [navigate, redirect, userInfo]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"small-container\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"r\\xE9initialiser le mot de passe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"my-3\",\n      children: \"r\\xE9initialiser le mot de passe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), passwordErrorMessage && /*#__PURE__*/_jsxDEV(MessageBox, {\n      variant: \"danger\",\n      children: passwordErrorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), message && /*#__PURE__*/_jsxDEV(MessageBox, {\n      variant: \"success\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }, this), message && /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/login\",\n      children: \"Click here to login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(MessageBox, {\n      variant: \"danger\",\n      children: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Nouveau mot de passe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          required: true,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Comfirmer votre nouveau mot de passe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          required: true,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Enregistrer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"py-3 d-block\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          className: \"my-2\",\n          children: [' ', /*#__PURE__*/_jsxDEV(Link, {\n            to: `/signin?redirect=${redirect}`,\n            children: \"Se connecter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ResetPasswordScreen, \"H9C5wQpoFKEI4k7Tz8PwiAgky/c=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = ResetPasswordScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPasswordScreen\");","map":{"version":3,"sources":["C:/Users/user/Desktop/m/m/frontend/src/screens/ResetPasswordScreen.js"],"names":["Axios","Link","useLocation","useNavigate","useParams","Row","Col","Container","Form","Button","Helmet","React","useContext","useEffect","useState","useReducer","Store","getError","LoadingBox","MessageBox","reducer","state","action","type","loading","message","payload","error","ResetPasswordScreen","dispatch","navigate","search","redirectInUrl","URLSearchParams","get","redirect","password","setPassword","confirmPassword","setConfirmPassword","passwordErrorMessage","setPasswordErrorMessage","userInfo","submitHandler","e","preventDefault","tokenn","token","data","patch","err","target","value"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport { Link, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { Row, Col } from 'react-bootstrap';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Helmet } from 'react-helmet-async';\nimport { React, useContext, useEffect, useState, useReducer  } from 'react';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\n\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'USER_RESET_PASSWORD_REQUEST':\n      return { loading: true };\n  \n    case 'USER_RESET_PASSWORD_SUCCESS':\n      return { loading: false, message: action.payload.message };\n  \n    case 'USER_RESET_PASSWORD_FAIL':\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default function ResetPasswordScreen() {\n\n  const [{ loading, message ,error}, dispatch] =\n  useReducer(reducer, {\n    loading: false,\n    error: '',\n\n  });\n\n\n  const navigate = useNavigate();\n  const { search } = useLocation();\n  const redirectInUrl = new URLSearchParams(search).get('redirect');\n  const redirect = redirectInUrl ? redirectInUrl : '/';\n\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [passwordErrorMessage, setPasswordErrorMessage] = useState(null)\n\n  const { state } = useContext(Store);\n  const { userInfo } = state;\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n\n     const { tokenn } = useParams;\n     const token = tokenn;\n\n     dispatch({ type: 'USER_RESET_PASSWORD_REQUEST' });\n    try {\n      if (password !== confirmPassword) {\n        setPasswordErrorMessage('Les mots de passe ne sont pas indentiques');\n        dispatch({\n          type: 'USER_RESET_PASSWORD_FAIL',\n          payload: getError(error),\n        });\n      }\n      else {\n\n      setPasswordErrorMessage(null)\n      const { data } = await Axios.patch(`/api/users/resetpassword/${token}`, { password });\n      dispatch({ type: 'USER_RESET_PASSWORD_SUCCESS', payload: data });\n      \n    }} catch (err) {\n      dispatch({\n        type: 'USER_RESET_PASSWORD_FAIL',\n        payload: getError(err),\n      });\n     \n    }\n  };\n\n  useEffect(() => {\n    if (userInfo) {\n      navigate(redirect);\n    }\n  }, [navigate, redirect, userInfo]);\n\n  return (\n    <Container className=\"small-container\">\n      <Helmet>\n        <title>réinitialiser le mot de passe</title>\n      </Helmet>\n      <h1 className=\"my-3\">réinitialiser le mot de passe</h1>\n\n      {passwordErrorMessage && (\n        <MessageBox variant=\"danger\">{passwordErrorMessage}</MessageBox>\n      )}\n      {message && <MessageBox variant=\"success\">{message}</MessageBox>}\n      {message && <Link to=\"/login\">Click here to login</Link>}\n      {error && <MessageBox variant=\"danger\">error</MessageBox>}\n      {loading && <LoadingBox />}\n\n      <Form onSubmit={submitHandler}>\n        <Form.Group className=\"mb-3\" controlId=\"email\">\n          <Form.Label>Nouveau mot de passe</Form.Label>\n          <Form.Control\n            type=\"password\"\n            required\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Comfirmer votre nouveau mot de passe</Form.Label>\n          <Form.Control\n            type=\"text\"\n            required\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n        </Form.Group>\n        <div className=\"mb-3\">\n          <Button type=\"submit\">Enregistrer</Button>\n        </div>     \n        <Row className=\"py-3 d-block\">\n        <Col className=\"my-2\">\n          {' '}\n          <Link to={`/signin?redirect=${redirect}`}>\n            Se connecter\n          </Link>\n        </Col>\n      </Row>\n      </Form>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}